・Sassとは
  「Sass（サス、サース）」とは、CSSを拡張して、書きやすく、見やすくしたスタイルシートのこと。
  Syntactically Awesome StyleSheetの略で、直訳すると「文法的に素晴らしいスタイルシート」。
  従来のCSSにデザイナーやプログラマーが抱いていた不満を解消するスタイルシートといえる。

  Sassはメタ言語である。メタ言語とは、ある言語に別のルールを定義するために使われる言語のことで、拡張言語と呼ばれることもある。




・Sassのメリット
  Sassを導入するメリットは、以下の5つ。

  1.入れ子の使用が可能
    ネストと呼ばれる入れ子の構造で記述する。
    CSSでは、それぞれのセレクタが独立して記述されているが、Sassはネストを使い子要素を波括弧{}で囲うことで、
    まとめてスタイルを設定することが可能。親と子の関係性がわかりやすいので、可読性が高まる。

  2.変数を利用できる
    Sassでは、変数を利用できる。
    通常、CSSで変数を使うことはできない。しかし、Sassはローカル変数とグローバル変数を利用することが可能。
    例えば、グローバル変数の場合スタイルシートに横幅のサイズを宣言し、その後セレクタの宣言の中でプロパティに代入することができる。
    同じ値をさまざまなプロパティで複数使う場合などで、非常に便利である。また、値を変更したい場合も、グローバル変数の数値だけを変更すれば、
    すべてのプロパティに適応されるため、メンテナンス性も向上する。

  3.四則演算が可能
    Sassでは、四則演算の利用が可能。つまり、値を足したり掛けたり、割ったりすることができる。変数と組み合わせることで便利に利用することができる。

  4.関数を使用できる
    関数を利用できる点もSassのメリット。引数に値をいれることができ、処理後の値を返してくれる。

  5.ミックスイン・継承による効率化
    ミックスインや継承を利用できる点もメリット。
    ミックスインとは、スタイルに引数を持たせること。つまり、抽象的なスタイルを記述できるので、
    値を変更しつつ複数の場面で使う設定がある場合には、ミックスインを使うと便利。
    関数と似ているが、関数は値だけを返すもの。ミックスインはスタイル自体を返すという点が特徴。

    継承は、引数を持たず使い回しができるスタイルのこと。同じスタイルを何回も書かなくて済むため、効率的に実装することができる。




・Sassのデメリット
  Sassのデメリットは、以下の2つ。

  1.学習コストがかかる
    SassはCSSのメタ言語であるため、CSSと似た使用感となっている。そのため、プログラミング言語をはじめから学ぶよりは学習コストはかからない。
    ただし、スタイルシートに触れたことがない人の場合、習得にある程度の時間を要すると考えられる。

  2.環境に依存する
    SassはCSSに変換しなければならないため、環境によってRubyやコンパイラをインストールするなど、Sassのための開発環境を整える必要がある。


    

・Gulpとは
  GulpはNode.jsをベースとしたタスクランナーのひとつ。
  タスクランナーとはWebサイト構築に必要な処理をタスクとして自動化してくれるプログラムで、作業の効率化に使われている。

  Gulpを使うことで以下のような手間や時間がかかる作業を自動化できる。
  ・CSSにベンダープレフィックスをつける
  ・CSSのプロパティをアルファベット順に並べ替える
  ・ソースマップの作成
  ・SassやLESSのコンパイル
  ・画像(jpeg, png, gif)、CSS、JavaScriptの圧縮
  ・PC・スマホ・タブレットの実機確認
  ・JavaScriptの構文チェック
  ・ブラウザのリロード

  たとえば、「画像、CSS、JavaScriptの圧縮」が行われると、ページの読み込み速度が早くなり、ユーザビリティの向上につながる。




・コンパイルとは
  特定のプログラミング言語を用いて記述されたコンピュータープログラムを他の言語（普通はコンピューターが実行できるバイナリ言語）
  を用いて記述された同じプログラムに形を変えること。

  ソースコード（人間語） →　コンパイル（翻訳・変換） →　バイナリコード（機械語）




・Gulpを使う理由
  SassなどのCSSプリプロセッサを使うとき、コンパイルという作業が毎回必要となる。
  コンパイルだけなら各種のコンパイラに付いているwatch機能を利用して変更を監視することはできるが、
  コンパイル後に「圧縮・結合して、ブラウザの自動更新も行いたい」と思ったとき、これらの作業を毎回手動で実行するのは手間がかかる。
  これらの作業をGulpのタスクにし、自動化することで作業を効率的に進めることができる。